generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum PERMISSION_LEVEL {
  ADMIN
  MODERATOR
}

enum WIKI_TYPE {
  SISTEM
  PLATAFORM
  HELP
}

enum Record_TYPE {
  PENDING
  APPROVED
  REJECTED
}

model Staff {
  id         String           @id @default(auto()) @map("_id") @db.ObjectId
  userId     String           @unique
  name       String
  permission PERMISSION_LEVEL @default(MODERATOR)
}

model Wiki {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  category  WIKI_TYPE @default(PLATAFORM)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now())
  content   String
  creatorId String
  comments  Comment[] @relation("WikiComments")
}

model Recruitment {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  creatorAt DateTime @default(now())
  updatedAt DateTime @default(now())
  creatorId String
  aminoLink String
  questions String[]
  comment   String
}

model Record {
  id         String      @id @default(auto()) @map("_id") @db.ObjectId
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  creatorId  String
  aminoLink  String
  name       String
  race       String
  photo      String
  age        Int
  height     String
  weight     String
  gender     String
  fisionomy  String
  history    String
  powers     Json[]
  skills     Json[]
  approved   Record_TYPE @default(PENDING)
  reviewedBy String?
  reviewedAt DateTime?
}

model Comment {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  content    String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now())
  authorId   String
  authorName String
  contentId  String   @db.ObjectId
  wiki       Wiki     @relation("WikiComments", fields: [contentId], references: [id])
}
